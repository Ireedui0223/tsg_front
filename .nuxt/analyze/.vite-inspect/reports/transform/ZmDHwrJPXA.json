{
  "resolvedId": "C:/Users/Ireedui/Desktop/additional/tsg/front-latest/node_modules/vue-number-animation/Number.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <component :is=\"tag\">\n    {{ tweenedNumber }}\n  </component>\n</template>\n\n<script>\nimport {TweenLite} from 'gsap'\n// Returns the number of full stop in given string.\nconst countFullstops = (str) => str.replace(/[^.]/g, '').length\n\nexport default {\n  name: 'number',\n  props: {\n    from: {\n      type: [Number, String],\n      default: 0\n    },\n    to: {\n      type: [Number, String],\n      required: true,\n      default: 0\n    },\n    format: {\n      type: Function,\n      default: (num) => parseInt(num)\n    },\n    duration: {\n      type: Number,\n      default: 1 // Duration of animation in seconds\n    },\n    easing: {\n      type: String,\n      default: 'Power1.easeOut'\n    },\n    delay: {\n      type: Number,\n      default: 0 // Delay the animation in seconds\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    animationPaused: Boolean // Stops animation before start\n  },\n  data() {\n    return {\n      fromProp: this.from\n    }\n  },\n  computed: {\n    tweenedNumber () {\n      return this.format(this.fromProp)\n    }\n  },\n  methods: {\n    tween (value) {\n      const vm = this\n      const tLite = TweenLite\n        .to(vm.$data, vm.duration, {\n          fromProp: value,\n          paused: vm.animationPaused,\n          ease: vm.easeCheck(),\n          onStart: () => vm.$emit('start'),\n          onComplete: () => vm.$emit('complete'),\n          onUpdate: () => vm.$emit('update'),\n          delay: vm.delay // In seconds\n        })\n      vm.tween.tLite = tLite\n    },\n    play () {\n      this.tween.tLite.play()\n    },\n    pause () {\n      this.tween.tLite.pause()\n    },\n    restart () {\n      this.tween.tLite.restart()\n    },\n    easeCheck () {\n      const vm = this\n      if (countFullstops(vm.easing) !== 1) {\n        throw new Error('Invalid ease type. (eg. easing=\"Power1.easeOut\")')\n      }\n      return vm.easing\n    }\n  },\n  watch: {\n    to (newValue) {\n      this.tween(newValue)\n    }\n  },\n  mounted() {\n    this.tween(this.to)\n  }\n}\n</script>\n\n<style>\n\n</style>\n",
      "start": 1700848824421,
      "end": 1700848824890,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700848824890,
      "end": 1700848824890,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700848824890,
      "end": 1700848824890,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700848824890,
      "end": 1700848824891,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700848824891,
      "end": 1700848824891,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700848824891,
      "end": 1700848824891,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700848824891,
      "end": 1700848824891,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700848824891,
      "end": 1700848824891,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport {TweenLite} from 'gsap'\n// Returns the number of full stop in given string.\nconst countFullstops = (str) => str.replace(/[^.]/g, '').length\n\nconst _sfc_main = {\n  name: 'number',\n  props: {\n    from: {\n      type: [Number, String],\n      default: 0\n    },\n    to: {\n      type: [Number, String],\n      required: true,\n      default: 0\n    },\n    format: {\n      type: Function,\n      default: (num) => parseInt(num)\n    },\n    duration: {\n      type: Number,\n      default: 1 // Duration of animation in seconds\n    },\n    easing: {\n      type: String,\n      default: 'Power1.easeOut'\n    },\n    delay: {\n      type: Number,\n      default: 0 // Delay the animation in seconds\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    animationPaused: Boolean // Stops animation before start\n  },\n  data() {\n    return {\n      fromProp: this.from\n    }\n  },\n  computed: {\n    tweenedNumber () {\n      return this.format(this.fromProp)\n    }\n  },\n  methods: {\n    tween (value) {\n      const vm = this\n      const tLite = TweenLite\n        .to(vm.$data, vm.duration, {\n          fromProp: value,\n          paused: vm.animationPaused,\n          ease: vm.easeCheck(),\n          onStart: () => vm.$emit('start'),\n          onComplete: () => vm.$emit('complete'),\n          onUpdate: () => vm.$emit('update'),\n          delay: vm.delay // In seconds\n        })\n      vm.tween.tLite = tLite\n    },\n    play () {\n      this.tween.tLite.play()\n    },\n    pause () {\n      this.tween.tLite.pause()\n    },\n    restart () {\n      this.tween.tLite.restart()\n    },\n    easeCheck () {\n      const vm = this\n      if (countFullstops(vm.easing) !== 1) {\n        throw new Error('Invalid ease type. (eg. easing=\"Power1.easeOut\")')\n      }\n      return vm.easing\n    }\n  },\n  watch: {\n    to (newValue) {\n      this.tween(newValue)\n    }\n  },\n  mounted() {\n    this.tween(this.to)\n  }\n}\n\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent($props.tag), null, {\n    default: _withCtx(() => [\n      _createTextVNode(_toDisplayString($options.tweenedNumber), 1)\n    ]),\n    _: 1\n  }))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1700848824891,
      "end": 1700848824895,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700848824895,
      "end": 1700848824895,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700848824896,
      "end": 1700848824896,
      "order": "normal"
    }
  ]
}
